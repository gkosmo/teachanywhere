<div class="row">
  <div class="col-sm-8">

    <h1> <%= @course.title %> </h1>
    <h2> <%= simple_format(@course.content) %></h2>
    <br>
    <h2> Given by: <%= @course.user.email %></h2>
    <% if @current_user_course_subscription.empty? %>
    <%= simple_form_for @subscription , url: course_subscriptions_path(@course) do |form| %>
    <%= form.button :submit,label:"Subscribe to This Course", class:"btn btn-lg btn-primary" %>
    <% end %>
    <% else %>
    <h3 style="red"> subscribed !</h3>
    <% end %>
    <b> They've subscribed already: </b>
    <% @course.subscriptions.each do |sub| %>
    <p>
      <%= sub.user.email %>
    </p>
    <% end %>
  </div>
</div>


<div class="row">
  <div class="col-sm-4">

    <% if @teacher then %>
    <%= render 'events/form', event:@event%>
    <% end %>
    <b>reviews: </b>
    <% @reviews.each do |rew| %>
    <h5> <i><%= rew.content %> </i> by: <b> <%= rew.user.email %> </b>  </h5>
    <% end %>
  </div>


  <div class="col-sm-6">


    <% unless @current_user_course_subscription.empty?%>
    <%= render 'review/form', review: @review %>
    <% end %>

  </div>
</div>

<div class="row">
  <div class="col-sm-12">
    <b>classes: </b>
    <%= react_component "EventList",
          render(template: 'events/index.json.jbuilder') %>
    <% @course.events.each do |event| %>
    <div class="col-sm-4">
      <% render 'events/event', event:event, teacher: @teacher%>
    </div>
    <% end %>

    <%= javascript_include_tag "https://cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/markerclusterer/src/markerclusterer_compiled.js" %>
    <%= javascript_include_tag "https://cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js" %>


  </div>
</div>
<div id="map" style='width: 100%; height: 200px;' class= 'img-res'>

</div>


<% content_for(:after_js) do %>
<script type="text/javascript">
$(document).on('ready', function() {
  var handler = Gmaps.build('Google');
  handler.buildMap({ provider: {scrollwheel: false}, internal: { id: 'map' } }, function(){
    markers = handler.addMarkers(<%= raw @hash.to_json %>);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
    if (markers.length == 0) {
      handler.getMap().setZoom(2);
    } else if (markers.length == 1) {
      handler.getMap().setZoom(12);
    }
  });
});

</script>
<%end%>
